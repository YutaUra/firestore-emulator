name: release

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
    paths:
      - .github/workflows/release.yml
      - .github/actions/setup/**

concurrency: ${{ github.workflow }}-${{ github.ref }}

permissions:
  contents: write
  pull-requests: write

jobs:
  release:
    name: Release
    runs-on: ubuntu-latest
    steps:
      - uses: actions/create-github-app-token@0d564482f06ca65fa9e77e2510873638c82206f2 # v1.11.5
        id: app-token
        with:
          app-id: ${{ secrets.BOT_APP_ID }}
          private-key: ${{ secrets.BOT_PRIVATE_KEY }}
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4
        with:
          token: ${{ steps.app-token.outputs.token }}
      - uses: ./.github/actions/setup
        with:
          token: ${{ steps.app-token.outputs.token }}
          bot-app-slug: ${{ steps.app-token.outputs.app-slug }}

      - name: Install Dependencies
        run: pnpm install

      - name: Create Release Pull Request or Publish to npm
        id: changesets
        if: github.event_name == 'push'
        uses: changesets/action@v1
        with:
          # This expects you to have a script called release which does a build for your packages and calls changeset publish
          publish: pnpm publish-packages
          setupGitUser: false
        env:
          GITHUB_TOKEN: ${{ steps.app-token.outputs.token }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}

      - if: ${{ steps.changesets.outputs.pullRequestNumber != '' }}
        run: gh pr merge --merge --auto "${{ steps.changesets.outputs.pullRequestNumber}}"
        env:
          GH_TOKEN: ${{ steps.app-token.outputs.token }}
